<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QMklWCyqAAAAAElFTkSuQmCC
</value>
  </data>
</root>